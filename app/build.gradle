plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("com.apollographql.apollo").version("2.5.2")
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId 'com.gyasistory.androids.graphqltest'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    def graph_ql = "2.5.2"

    implementation 'androidx.annotation:annotation:1.5.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${deps.androidX.lifecycle}"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.activity:activity-ktx:${deps.androidX.activity}"
    implementation "androidx.appcompat:appcompat:${deps.androidX.appCompat}"
    implementation "androidx.cardview:cardview:${deps.androidX.cardView}"
    implementation "androidx.constraintlayout:constraintlayout:${deps.androidX.constraintLayout}"
    implementation "androidx.core:core-ktx:${deps.androidX.core}"
    implementation "androidx.fragment:fragment-ktx:${deps.androidX.fragment}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${deps.androidX.lifecycle}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${deps.androidX.swipeRefreshLayout}"
    implementation "com.google.android.material:material:${deps.materialDesign}"

    implementation "com.squareup.picasso:picasso:${deps.picasso}"

    implementation("com.apollographql.apollo:apollo-runtime:$graph_ql")

    // optional: if you want to use the normalized cache
    implementation("com.apollographql.apollo:apollo-normalized-cache-sqlite:$graph_ql")
    // optional: for coroutines support
    implementation("com.apollographql.apollo:apollo-coroutines-support:$graph_ql")
    // optional: Most of apollo-android does not depend on Android in practice and runs on any JVM or on Kotlin native. apollo-android-support contains a few Android-only helper classes. For an example to send logs to logcat or run callbacks on the main thread.
    implementation("com.apollographql.apollo:apollo-android-support:$graph_ql")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    kapt "com.squareup.moshi:moshi-kotlin-codegen:${deps.moshi}"
}